// Copyright (C) 1991-2008 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II"
// VERSION "Version 8.1 Build 163 10/28/2008 SJ Web Edition"

// DATE "09/08/2020 21:24:23"

// 
// Device: Altera EPF10K30ETC144-1 Package TQFP144
// 

// 
// This Verilog file should be used for Custom Verilog HDL only
// 

`timescale 1 ps/ 1 ps

module Exp03Task01 (
	w1,
	w2,
	z,
	clk,
	reset);
input 	w1;
input 	w2;
output 	z;
input 	clk;
input 	reset;

wire gnd = 1'b0;
wire vcc = 1'b1;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
// synopsys translate_off
initial $sdf_annotate("Exp03Task01_v.sdo");
// synopsys translate_on

wire \w2~dataout ;
wire \w1~dataout ;
wire \reset~dataout ;
wire \clk~dataout ;
wire \y.s0~regout ;
wire \y.s1~regout ;
wire \y.s2~regout ;
wire \y.s3~regout ;
wire \y.s4~regout ;


// atom is at PIN_54
flex10ke_io \w2~I (
	.datain(gnd),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(\w2~dataout ),
	.padio(w2));
// synopsys translate_off
defparam \w2~I .feedback_mode = "from_pin";
defparam \w2~I .operation_mode = "input";
defparam \w2~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at PIN_124
flex10ke_io \w1~I (
	.datain(gnd),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(\w1~dataout ),
	.padio(w1));
// synopsys translate_off
defparam \w1~I .feedback_mode = "from_pin";
defparam \w1~I .operation_mode = "input";
defparam \w1~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at PIN_126
flex10ke_io \reset~I (
	.datain(gnd),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(\reset~dataout ),
	.padio(reset));
// synopsys translate_off
defparam \reset~I .feedback_mode = "from_pin";
defparam \reset~I .operation_mode = "input";
defparam \reset~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at PIN_55
flex10ke_io \clk~I (
	.datain(gnd),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(\clk~dataout ),
	.padio(clk));
// synopsys translate_off
defparam \clk~I .feedback_mode = "from_pin";
defparam \clk~I .operation_mode = "input";
defparam \clk~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at LC5_D27
flex10ke_lcell \y.s0 (
// Equation(s):
// \y.s0~regout  = DFFEA(!\y.s4~regout  & (\w2~dataout  $ !\w1~dataout ), GLOBAL(\clk~dataout ), GLOBAL(\reset~dataout ), , , , )

	.dataa(vcc),
	.datab(\w2~dataout ),
	.datac(\w1~dataout ),
	.datad(\y.s4~regout ),
	.aclr(!\reset~dataout ),
	.aload(gnd),
	.clk(\clk~dataout ),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\y.s0~regout ),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \y.s0 .clock_enable_mode = "false";
defparam \y.s0 .lut_mask = "00c3";
defparam \y.s0 .operation_mode = "normal";
defparam \y.s0 .output_mode = "reg_only";
defparam \y.s0 .packed_mode = "false";
// synopsys translate_on

// atom is at LC4_D27
flex10ke_lcell \y.s1 (
// Equation(s):
// \y.s1~regout  = DFFEA(!\y.s0~regout  & (\w2~dataout  $ !\w1~dataout ), GLOBAL(\clk~dataout ), GLOBAL(\reset~dataout ), , , , )

	.dataa(vcc),
	.datab(\w2~dataout ),
	.datac(\w1~dataout ),
	.datad(\y.s0~regout ),
	.aclr(!\reset~dataout ),
	.aload(gnd),
	.clk(\clk~dataout ),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\y.s1~regout ),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \y.s1 .clock_enable_mode = "false";
defparam \y.s1 .lut_mask = "00c3";
defparam \y.s1 .operation_mode = "normal";
defparam \y.s1 .output_mode = "reg_only";
defparam \y.s1 .packed_mode = "false";
// synopsys translate_on

// atom is at LC3_D27
flex10ke_lcell \y.s2 (
// Equation(s):
// \y.s2~regout  = DFFEA(\y.s1~regout  & (\w2~dataout  $ !\w1~dataout ), GLOBAL(\clk~dataout ), GLOBAL(\reset~dataout ), , , , )

	.dataa(vcc),
	.datab(\y.s1~regout ),
	.datac(\w2~dataout ),
	.datad(\w1~dataout ),
	.aclr(!\reset~dataout ),
	.aload(gnd),
	.clk(\clk~dataout ),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\y.s2~regout ),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \y.s2 .clock_enable_mode = "false";
defparam \y.s2 .lut_mask = "c00c";
defparam \y.s2 .operation_mode = "normal";
defparam \y.s2 .output_mode = "reg_only";
defparam \y.s2 .packed_mode = "false";
// synopsys translate_on

// atom is at LC2_D27
flex10ke_lcell \y.s3 (
// Equation(s):
// \y.s3~regout  = DFFEA(\y.s2~regout  & (\w2~dataout  $ !\w1~dataout ), GLOBAL(\clk~dataout ), GLOBAL(\reset~dataout ), , , , )

	.dataa(vcc),
	.datab(\y.s2~regout ),
	.datac(\w2~dataout ),
	.datad(\w1~dataout ),
	.aclr(!\reset~dataout ),
	.aload(gnd),
	.clk(\clk~dataout ),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\y.s3~regout ),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \y.s3 .clock_enable_mode = "false";
defparam \y.s3 .lut_mask = "c00c";
defparam \y.s3 .operation_mode = "normal";
defparam \y.s3 .output_mode = "reg_only";
defparam \y.s3 .packed_mode = "false";
// synopsys translate_on

// atom is at LC1_D27
flex10ke_lcell \y.s4 (
// Equation(s):
// \y.s4~regout  = DFFEA(\y.s3~regout  & (\w2~dataout  $ !\w1~dataout ), GLOBAL(\clk~dataout ), GLOBAL(\reset~dataout ), , , , )

	.dataa(vcc),
	.datab(\y.s3~regout ),
	.datac(\w2~dataout ),
	.datad(\w1~dataout ),
	.aclr(!\reset~dataout ),
	.aload(gnd),
	.clk(\clk~dataout ),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\y.s4~regout ),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \y.s4 .clock_enable_mode = "false";
defparam \y.s4 .lut_mask = "c00c";
defparam \y.s4 .operation_mode = "normal";
defparam \y.s4 .output_mode = "reg_only";
defparam \y.s4 .packed_mode = "false";
// synopsys translate_on

// atom is at PIN_46
flex10ke_io \z~I (
	.datain(\y.s4~regout ),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(),
	.padio(z));
// synopsys translate_off
defparam \z~I .feedback_mode = "none";
defparam \z~I .operation_mode = "output";
defparam \z~I .reg_source_mode = "none";
// synopsys translate_on

endmodule
